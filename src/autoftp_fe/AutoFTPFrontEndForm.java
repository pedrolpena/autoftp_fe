/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pena
 */
package autoftp_fe;

import javax.swing.SwingUtilities;

public class AutoFTPFrontEndForm extends javax.swing.JFrame{

    /**
     * Creates new form AutoFTPFrontEndForm
     */
    public AutoFTPFrontEndForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        ftpServerTextField = new javax.swing.JTextField();
        uploadPathTextField = new javax.swing.JTextField();
        userNameTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JPasswordField();
        jPanel4 = new javax.swing.JPanel();
        queueRefreshTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        phoneBookEntryTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fileSizeLimitTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        transmitEnableCheckBox = new javax.swing.JCheckBox();
        useModemCheckBox = new javax.swing.JCheckBox();
        remoteSocketServerAddressTextField = new javax.swing.JTextField();
        remoteSocketServerPortTextField = new javax.swing.JTextField();
        queueLocationButton = new javax.swing.JButton();
        queuePathTextField = new javax.swing.JTextField();
        logFileLocationButton = new javax.swing.JButton();
        logFilePathTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        queueTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        statusMessageTextArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        localSocketServerAddressTextField = new javax.swing.JTextField();
        localSocketServerPortTextField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(718, 840));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setMaximumSize(new java.awt.Dimension(580, 580));
        jPanel1.setMinimumSize(new java.awt.Dimension(580, 580));
        jPanel1.setPreferredSize(new java.awt.Dimension(694, 830));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("FTP Server Settings"));

        ftpServerTextField.setText("ftp.aoml.noaa.gov");
        ftpServerTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Server", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N

        uploadPathTextField.setText("/XBT/");
        uploadPathTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Upload Path", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N

        userNameTextField.setText("jTextField3");
        userNameTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Username", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N

        passwordTextField.setText("jPasswordField1");
        passwordTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ftpServerTextField)
                    .addComponent(uploadPathTextField)
                    .addComponent(userNameTextField)
                    .addComponent(passwordTextField))
                .addGap(24, 24, 24))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(ftpServerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uploadPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ftpServerTextField, passwordTextField, uploadPathTextField, userNameTextField});

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Configure Transmitter"));

        queueRefreshTextField.setText("10");
        queueRefreshTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queueRefreshTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Queue Refresh");

        jLabel2.setText("Minutes");

        jLabel3.setText("Phonebook Entry");

        phoneBookEntryTextField.setText("Iridium");

        jLabel4.setText("File Size limit (bytes)");
        jLabel4.setToolTipText("");

        fileSizeLimitTextField.setText("-1");
        fileSizeLimitTextField.setToolTipText("");

        jLabel5.setText("Socket Server");
        jLabel5.setToolTipText("");

        jLabel6.setText("Socket Port");

        jLabel7.setText("Transmit Enable");

        jLabel8.setText("Use modem");

        queueLocationButton.setText("Browse");

        queuePathTextField.setEditable(false);
        queuePathTextField.setText("/home/pena/auto_ftp_queue");
        queuePathTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Queue Location"));
        queuePathTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queuePathTextFieldActionPerformed(evt);
            }
        });

        logFileLocationButton.setText("Browse");

        logFilePathTextField.setEditable(false);
        logFilePathTextField.setText("/home/pena/auto_ftp_logs");
        logFilePathTextField.setToolTipText("");
        logFilePathTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Log File Location"));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transmitEnableCheckBox)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(remoteSocketServerPortTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(remoteSocketServerAddressTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fileSizeLimitTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phoneBookEntryTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(queueRefreshTextField)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)))
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(useModemCheckBox)
                        .addContainerGap())))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(queueLocationButton)
                    .addComponent(logFileLocationButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(queuePathTextField)
                    .addComponent(logFilePathTextField)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(queueRefreshTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(phoneBookEntryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fileSizeLimitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remoteSocketServerAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remoteSocketServerPortTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(queuePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(queueLocationButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logFilePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logFileLocationButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(transmitEnableCheckBox))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8)
                        .addComponent(useModemCheckBox)))
                .addGap(47, 47, 47))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        queueTextArea.setEditable(false);
        queueTextArea.setColumns(20);
        queueTextArea.setRows(5);
        queueTextArea.setToolTipText("");
        queueTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Files in Queue", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BOTTOM));
        jScrollPane1.setViewportView(queueTextArea);

        statusMessageTextArea.setEditable(false);
        statusMessageTextArea.setColumns(20);
        statusMessageTextArea.setRows(5);
        statusMessageTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Transmitter Messages", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BOTTOM));
        jScrollPane2.setViewportView(statusMessageTextArea);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Socket Server Local Settings"));

        jLabel9.setText("Socket Server");
        jLabel9.setToolTipText("");

        jLabel10.setText("Socket Port");

        localSocketServerAddressTextField.setText("127.0.0.1");
        localSocketServerAddressTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localSocketServerAddressTextFieldActionPerformed(evt);
            }
        });

        localSocketServerPortTextField.setText("25000");

        jButton2.setText("Default");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Connect");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(localSocketServerPortTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(localSocketServerAddressTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(localSocketServerAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(localSocketServerPortTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void localSocketServerAddressTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localSocketServerAddressTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_localSocketServerAddressTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        saveForm();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void queuePathTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queuePathTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_queuePathTextFieldActionPerformed

    private void queueRefreshTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queueRefreshTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_queueRefreshTextFieldActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fileSizeLimitTextField;
    private javax.swing.JTextField ftpServerTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField localSocketServerAddressTextField;
    private javax.swing.JTextField localSocketServerPortTextField;
    private javax.swing.JButton logFileLocationButton;
    private javax.swing.JTextField logFilePathTextField;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JTextField phoneBookEntryTextField;
    private javax.swing.JButton queueLocationButton;
    private javax.swing.JTextField queuePathTextField;
    private javax.swing.JTextField queueRefreshTextField;
    private javax.swing.JTextArea queueTextArea;
    private javax.swing.JTextField remoteSocketServerAddressTextField;
    private javax.swing.JTextField remoteSocketServerPortTextField;
    private javax.swing.JTextArea statusMessageTextArea;
    private javax.swing.JCheckBox transmitEnableCheckBox;
    private javax.swing.JTextField uploadPathTextField;
    private javax.swing.JCheckBox useModemCheckBox;
    private javax.swing.JTextField userNameTextField;
    // End of variables declaration//GEN-END:variables

/**
 *Work below here 
 *
 */
    boolean  formSaved = false;
    String currentConfig="";
    public void setFTPServer(String s) {
        ftpServerTextField.setText(s);
    }//end setFTPServer

    public String getFTPServerAddress() {
        return ftpServerTextField.getText();
    }//end getFTPServerAddress
    

    
    public void setUploadPath(String s) {
        uploadPathTextField.setText(s);
    }//end set

    public String getUploadPath() {
        return uploadPathTextField.getText();
    }//end get
    
    
    
        public void setQueuePath(String s) {
        queuePathTextField.setText(s);
    }//end set

    public String getQueuePath() {
        return queuePathTextField.getText();
    }//end get
    
        public void setLogFilePath(String s) {
        logFilePathTextField.setText(s);
    }//end set

    public String getLogFilePath() {
        return logFilePathTextField.getText();
    }//end get
    public void setUsername(String s) {
        userNameTextField.setText(s);
    }//end set

    public String getUsername() {
        return userNameTextField.getText();
    }//end get     

    public void setPassword(String s) {
        passwordTextField.setText(s);
    }//end set

    public String getPassword() {
        return passwordTextField.getText();
    }//end get     
    public void setQueueRefresh(String s) {
        queueRefreshTextField.setText(s);
    }//end set

    public String getQueueRefresh() {
        return queueRefreshTextField.getText();
    }//end get 
    public void setPhoneBookEntry(String s) {
        phoneBookEntryTextField.setText(s);
    }//end set

    public String getPhoneBookEntry() {
        return phoneBookEntryTextField.getText();
    }//end get  
    public void setFileSizeLimit(String s) {
        fileSizeLimitTextField.setText(s);
    }//end set

    public String getFileSizeLimit() {
        return fileSizeLimitTextField.getText();
    }//end get    
    public void setLocalSocketServerAddress(String s) {
        localSocketServerAddressTextField.setText(s);
    }//end set

    public String getLocalSocketServerAddress() {
        return localSocketServerAddressTextField.getText();
        //return";socketServerAddress;";
    }//end get     
    public void seLocalSocketServerPort(String s) {
        localSocketServerPortTextField.setText(s);
    }//end set

    public String getLocalSocketServerPort() {
        return localSocketServerPortTextField.getText();
        //return ";socketServerPort;";
    }//end get 
    
    
    public void setRemoteSocketServerAddress(String s) {
        remoteSocketServerAddressTextField.setText(s);
    }//end set

    public String getRemoteSocketServerAddress() {
        return remoteSocketServerAddressTextField.getText();
        //return";socketServerAddress;";
    }//end get     
    public void setRemoteSocketServerPort(String s) {
        remoteSocketServerPortTextField.setText(s);
    }//end set

    public String getRemoteSocketServerPort() {
        return remoteSocketServerPortTextField.getText();
        //return ";socketServerPort;";
    }//end get     
    
    
    
    
    public void setTransmitEnable(boolean b) {
        transmitEnableCheckBox.setSelected(b);
    }//end set
    public void setUseModem(boolean b) {
        useModemCheckBox.setSelected(b);
    }//end set

    public boolean getTransmitEnable() {
        return transmitEnableCheckBox.isSelected();
    }//end set

    public boolean getUseModem() {
        return useModemCheckBox.isSelected();
    }//end set 

    public void setSaveForm(boolean b) {
        synchronized (this) {
            formSaved = b;
        }
    }

    public boolean isFormSaved() {
        return formSaved;
    }
    private void saveForm() {
        currentConfig = getQueueRefresh() + "::"
                + getQueuePath() + "::"
                + getLogFilePath() + "::"
                + getFTPServerAddress() + "::"
                + getUsername() + "::"
                + getPassword() + "::"
                + getUploadPath() + "::"
                + getTransmitEnable() + "::"
                + getPhoneBookEntry() + "::"
                + getUseModem() + "::"
                + getRemoteSocketServerAddress() + "::"
                + getRemoteSocketServerPort() + "::"
                + getFileSizeLimit();
        setSaveForm(true);

    }//endSaveForm

    public String getCurrentConfig() {
        setSaveForm(false);
        return currentConfig;
    }//endgetCurrentConfig

    public void appendFTPStatusMessage(String msg) {

        SwingUtilities.invokeLater(new Runnable() {
            // except this is queued onto the event thread.
            public void run() {
                
                statusMessageTextArea.append("\n"+msg.replace("\n", ""));
            }
        });


    }

    public void setQueueStatusMessage(String msg) {

        SwingUtilities.invokeLater(new Runnable() {
            // except this is queued onto the event thread.
            public void run() {

                queueTextArea.setText(null);
                String[] list = msg.split("\n");
                for (int i = list.length - 1; i >= 0; i--) {
                    if (!list[i].equals("")) {
                        if (i > 0) {
                            queueTextArea.append(list[i] + "\n");
                        } else {
                            queueTextArea.append(list[i]);
                        }
                    }
                }//end for                
                //queueTextArea.setText(msg);
            }
        });


        
    }//end




}
